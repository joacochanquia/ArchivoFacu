Resolver con SENTENCIAS AWAIT (<> y/o ) el siguiente problema.

● Se debe calcular el valor promedio de un vector de 1000 números por medio de 10
procesos. Al finalizar todos los procesos deben guardar en una variable local el
resultado final. Nota: maximizar la concurrencia.

int v[1000]; total = 0; listo = 0;
process[id=0..9]{
	real res; int i, totalInt =0;
	for(i = 100*id; i < 100*(id+1); i++){
		totalInt += v[i];
	}
	<total += totalInt>
	<listo++>
	<await listo == 10;>
	res = total/1000;
}

● Se debe realizar el producto escalar de dos vectores A y B de 1000 números (como
se muestra en la fórmula , utilizando 10 procesos. Al terminar
todos los procesos deben guardarse en una variable local el resultado final r. Nota:
maximizar concurrencia

int A[1000], B[1000]; total = 0;
process[id=0..9]{
	int res; int i, totalInt;
	for(i = 100*id; i < 100*(id+1); i++){
		totalInt += A[i] * B[i]
	}
	<total += totalInt>
	<listo++>
	<await listo == 10;>
	res = total;
}

● En una playa hay 5 personas que deben juntar 15 monedas cada una y obtener el
TOTAL de dinero juntado entre todos (la suma del valor de las 75 monedas que
pueden ser de 1, 2 o 5 pesos). Al terminar todos los procesos deben guardarse en
una variable local el TOTAL. Nota: maximizar la concurrencia. Suponga que existe
una función Moneda() llamada por las personas que simula encontrar UNA moneda
y retorna el valor de la misma. Cada persona trabaja sobre una zona diferente de la
playa.

int total = 0, listo = 0;
process Persona[id=0..4]{
	int tot, totalInt;
	for(i=0;i<15;i++){
		totalInt += Moneda();
	}
	<total += totalInt>
	<listo++;>
	<await listo == 5;>
	res = total;
}
